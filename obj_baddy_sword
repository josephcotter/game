//STEP EVENT
//player collision
    if (place_meeting(x, y, obj_player)) // if player touches baddy body -- baddy sword collisions are handled in obj_baddy_sword
    { 
        with (obj_player)
        {
             if(!justhurt)
             {  
                dashing = 0; // new // end dash
                
                hspd = 2.9*sign(x - obj_baddy.x) //2.9 so that 30 frames can get hspd to 0 with decrements of .1 in the event that the player is crouching in a tunnel
                
                if(sprite_index == spr_player_crouch && place_meeting(x, y-16, obj_room)) //avoids entering crouch hurt sprite when you are hit while jumping near a ceiling
                        sprite_index = spr_player_crouch_hurt;
                else
                {
                    sprite_index = spr_player_hurt; //get hit upwards and use normal sprite if there is room to do so
                    vspd = -2         
                }
                image_xscale = -sign(hspd);
                alarm[2] = 30;
                hurt = 1;
                justhurt = 1;
                hearts --;               
                if (attacking) //if player is attacking and gets hit by enemy, sword object is destroyed and no more damage can be done. all attack variables reset, but player cannot attack for another 30 frames cuz hurt
                {  
                    justattacked = 0;
                    attacking = 0;
                    regattack = 0;
                    crouchattack = 0;
                    downthrust = 0;
                    with (obj_player_sword)
                        instance_destroy();
                }
             }
                       
             if (!hearts)
                dead = 1;
        }
        
        master.duck = 1; //successful hit
    }
    
//END STEP EVENT
image_xscale = master.image_xscale;
x = master.x;
y = master.y;
