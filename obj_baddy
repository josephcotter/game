//OBJECT CREATION
vspd = 0;
hspd = 0;
walkspd = 1
grav = .2
attack = 0;
duck = 0;

//STEP LOGIC
toplayer = distance_to_object(obj_player); 

//player sword collision
if (place_meeting(x, y, obj_player_sword))
    duck = 1;
   // instance_destroy();
    
//moving
if (toplayer <= 512 && toplayer > 20)//if on the same screen as player and not on top of player, move
{    
    if (collision_line(x,y,obj_player.x, obj_player.y, obj_room,true,true) = noone) // if no walls between self and player
    { 
            if (obj_player.x < x) //move toward player   
                hspd = -walkspd;        
           else 
                hspd = walkspd;       
    }
}
else if (toplayer < 15) //back away if too close
{   
     if(obj_player.x < x)
        hspd = walkspd;
    else
        hspd = -walkspd; 
}
else 
    hspd = 0; //if toplayer is between 15 and 20, don't move

//attacking
if (toplayer < 75 && !attack)
{
    attack = 1;
    if (duck)
        sprite_index = spr_badblonde_crouch;
    else
    sprite_index = spr_badblonde_attack;
    alarm[0] = 16;
}

if(toplayer < 20 && attack && !obj_player.hurt) //means player is very close and yet the attack missed - try a low attack
    duck = 1;


//gravity
vspd += .2;  //can only fall down, never jumps

//vertical collision detection
if (place_meeting(x, y+vspd, obj_room))
{   
    while(!place_meeting(x, y +sign(vspd), obj_room))
        y += sign(vspd);
    vspd = 0;
}

y += vspd;

if (attack == 1) // dont move during attack animation (attack = 1 when attacking, 2 just after attacking, and 0 otherwise
    hspd = 0;

if(!place_meeting(x + 32*hspd, y, obj_room)) // dont move too close to a wall 
    x += hspd;

//will never run into walls -- only chases player when path is not obstructed

//sprite mirroring
if (attack != 1) //mirror if moving or attacking
    image_xscale = sign(x - obj_player.x);
    
    
//player collision

if (place_meeting(x, y, obj_player))
{ 
    with (obj_player)
    {
         if(!justhurt)
         {  
            hspd = 2.9*sign(x - obj_baddy.x) //2.9 so that 30 frames can get hspd to 0 with decrements of .1 in the event that the player is crouching in a tunnel
            
            if (!place_meeting(x, y-16, obj_room)) //get hit upwards if there is room to do so
            {
                sprite_index = spr_player_hurt;
                vspd = -2;
            }
            else 
            {
                sprite_index = spr_player_crouch_hurt;
                vspd = 0;     
            }
             
            image_xscale = -sign(hspd);
            alarm[2] = 30;
            hurt = 1;
            justhurt = 1;
         }
         
         if (attack) //if player is attacking and gets hit by enemy, sword object is destroyed and no more damage can be done
         {  
            with (obj_player_sword)
                instance_destroy();
         }
    }
    duck = 0; //successful hit
}

//ALARM 0
attack = 2;
sprite_index = spr_badblonde;
alarm[1] = 16;

//ALARM 1
attack = 0;
